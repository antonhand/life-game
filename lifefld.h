/*!
\file
\brief Заголовочный файл структур и функций для работы с полем

Данный файл содержит в себе определения структур и функций, необходимых для разделения поля между процессами, создания и удаления участков поля данных процессов.
*/
#ifndef LIFEFLD_H_INCLUDED
#define LIFEFLD_H_INCLUDED

///Структура границ участка поля данного процесса
/*!
В данной структуре хранятся указатели на разделяемую память
*/
struct border{
    int *left_neighbor; ///< Граница поля соседа слева
    int *left_border;   ///< Граница поля данного процесса слева
    int *right_neighbor;///< Граница поля соседа справа
    int *right_border;  ///< Граница поля данного процесса справа
    int *up_neighbor;   ///< Граница поля соседа сверху
    int *up_border;     ///< Граница поля данного процесса сверху
    int *down_neighbor; ///< Граница поля соседа снизу
    int *down_border;   ///< Граница поля данного процесса снизу
};

///Структура параметров данного процесса
struct proc_param{
    int num_vert;   ///< Номер процесса по вертикали
    int num_gor;    ///< Номер процесса по горизонтали
    int vert_side;  ///< Размер участка поля данного процесса по вертикали
    int gor_side;   ///< Размер участка поля данного процесса по горизонтали
};

///Структура параметров поля
struct fld_param{
    int m;          ///< Размер поля по вертикали
    int n;          ///< Размер поля по горизонтали
    int k;          ///< Количество процессов
    int proc_vert;  ///< Количество процессов по вертикали
    int proc_gor;   ///< Количество процессов по горизонтали
    int sqrside;    ///< Размер квадрата разбиения
};

/*!
Вычисляет оптимальное разбиение поля на квадраты
\param[in] m Размер поля по вертикали
\param[in] n Размер поля по горизонтали
\param[in] k Количество процессов
\param[out] procvert Указатель на область памяти, в которую нужно поместить вычисленное количество процессов по вертикали при данном разбиении
\param[out] procgor Указатель на область памяти, в которую нужно поместить вычисленное количество процессов по вертикали при данном разбиении
\return Сторона квадратов, на которые разбивается поле
*/
int
coverfld(int m, int n, int k, int *procvert, int *procgor);

/*!
Создаёт участок поля для процесса
\param[in] fldp Параметры поля
\param[in] proc Параметры процесса
\return Указатель на поле
*/
int **
fldcreate(struct fld_param *fldp, struct proc_param *proc);

/*!
Заполняет структуру границ поля указателями на разделяемую память
\param[out] borders Указатель на заполняемую структуру границ поля
\param[in] fldp Параметры поля
\param[in] proc Параметры процесса
*/
void
get_borders(struct border *borders, struct fld_param *fldp, struct proc_param *proc, int **shmid);

/*!
Уничтожает участок поля процесса
\param[in] fld Указатель на поле
\param[in] fldp Параметры поля
\param[in] proc Параметры процесса
*/
void
rmfld(int **fld, struct fld_param *fldp, struct proc_param *proc);

/*!
Открепляет указатели на разделяемую память в структуре границ поля
\param[out] borders Указатель на структуру границ поля
\param[in] fldp Параметры поля
\param[in] proc Параметры процесса
*/
void
rmborder(struct border *borders, struct fld_param *fldp, struct proc_param *proc);

/*!
Проверяет, пренадлежит ли клетка с координатами (x, y) участку поля данного процесса. В случае если y равен NULL, проверяет, принадлежит ли часть строки с номером x участку поля данного процесса.
Приводит х и y к внутренним координатам процесса.
\param[in,out] x Номер клетки по вертикали
\param[in,out] y Номер клетки по горизонтали
\param[in] fldp Параметры поля
\param[in] proc Параметры процесса
*/
int
checkhit(int *x, int *y, struct fld_param *fldp, struct proc_param *proc);

#endif // LIFEFLD_H_INCLUDED
