<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="lifeop_8c">
    <title>lifeop.c File Reference</title>
    <programlisting>#include &lt;stdlib.h&gt;</programlisting>
    <programlisting>#include &lt;stdio.h&gt;</programlisting>
    <programlisting>#include &lt;sys/ipc.h&gt;</programlisting>
    <programlisting>#include &lt;sys/shm.h&gt;</programlisting>
    <programlisting>#include &lt;sys/sem.h&gt;</programlisting>
    <programlisting>#include &lt;sys/msg.h&gt;</programlisting>
    <programlisting>#include &lt;string.h&gt;</programlisting>
    <programlisting>#include &lt;math.h&gt;</programlisting>
    <programlisting>#include &lt;errno.h&gt;</programlisting>
    <programlisting>#include &lt;unistd.h&gt;</programlisting>
    <programlisting>#include &quot;lifeop.h&quot;</programlisting>
    <programlisting>#include &quot;lifefld.h&quot;</programlisting>
        <section>
            <title>Функции</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="lifeop_8c_1aae0b7e9569a84f89761ab2f642a8a459">processcmd</link> (
char * cmd, struct <link linkend="structfld__param">fld_param</link> * fldp, int * msgid, int semid)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="lifeop_8c_1a3f37c599f55a2b67ff121e6c37df7630">clearfld</link> (
int ** fld, struct <link linkend="structborder">border</link> * borders, struct <link linkend="structproc__param">proc_param</link> * proc)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="lifeop_8c_1a67be292e3bb47697a2ce1391363c5298">start</link> (
int P, int mode, int ** fld, struct <link linkend="structborder">border</link> * borders, struct <link linkend="structfld__param">fld_param</link> * fldp, struct <link linkend="structproc__param">proc_param</link> * proc, int semid, int num, int * msgid)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="lifeop_8c_1a5a4fae3e7116c3fc2eed053fbd3e7d70">snap</link> (
int ** fld, int mode, struct <link linkend="structfld__param">fld_param</link> * fldp, struct <link linkend="structproc__param">proc_param</link> * proc, int semid, int num)</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Подробное описание</title>
    <para>Definition in file /home/anton/Dropbox/Программирование/Жизнь/lifeop.c</para>
    </simplesect>
    <literallayout><computeroutput>
1 <emphasis class="preprocessor">#include&#32;&lt;stdlib.h&gt;</emphasis>
2 <emphasis class="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
3 <emphasis class="preprocessor">#include&#32;&lt;sys/ipc.h&gt;</emphasis>
4 <emphasis class="preprocessor">#include&#32;&lt;sys/shm.h&gt;</emphasis>
5 <emphasis class="preprocessor">#include&#32;&lt;sys/sem.h&gt;</emphasis>
6 <emphasis class="preprocessor">#include&#32;&lt;sys/msg.h&gt;</emphasis>
7 <emphasis class="preprocessor">#include&#32;&lt;string.h&gt;</emphasis>
8 <emphasis class="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
9 <emphasis class="preprocessor">#include&#32;&lt;errno.h&gt;</emphasis>
10 <emphasis class="preprocessor">#include&#32;&lt;unistd.h&gt;</emphasis>
11 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="lifeop_8h">lifeop.h</link>&quot;</emphasis>
12 <emphasis class="preprocessor">#include&#32;&quot;<link linkend="lifefld_8h">lifefld.h</link>&quot;</emphasis>
13 
14 
15 
<link linkend="lifeop_8h_1aae0b7e9569a84f89761ab2f642a8a459">16 </link><emphasis class="keywordtype">int</emphasis>&#32;<link linkend="lifeop_8h_1aae0b7e9569a84f89761ab2f642a8a459">processcmd</link>(<emphasis class="keywordtype">char</emphasis>&#32;*cmd,&#32;<emphasis class="keyword">struct</emphasis>&#32;<link linkend="structfld__param">fld_param</link>&#32;*fldp,&#32;<emphasis class="keywordtype">int</emphasis>&#32;*msgid,&#32;<emphasis class="keywordtype">int</emphasis>&#32;semid)
17 {
18 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>&#32;oper[<link linkend="lifeop_8h_1adf764cbdea00d65edcd07bb9953ad2b7a82d13d61b41ebfaa72523ab683e418bc">CMDSIZE</link>];
19 &#32;&#32;&#32;&#32;oper[0]&#32;=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>;
20 &#32;&#32;&#32;&#32;<emphasis class="keyword">struct&#32;</emphasis><link linkend="structmsgb">msgb</link>&#32;msg;
21 &#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[0]&#32;=&#32;0;
22 &#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[1]&#32;=&#32;0;
23 &#32;&#32;&#32;&#32;sscanf(cmd,&#32;<emphasis class="stringliteral">&quot;%s&quot;</emphasis>,&#32;oper);
24 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;add&quot;</emphasis>)&#32;||&#32;!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;добавить&quot;</emphasis>)&#32;){
25 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;x,&#32;y;
26 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(sscanf(cmd,&#32;<emphasis class="stringliteral">&quot;%s%d%d&quot;</emphasis>,&#32;oper,&#32;&amp;x,&#32;&amp;y)&#32;==&#32;3){
27 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(x&#32;&gt;&#32;0&#32;&amp;&amp;&#32;x&#32;&lt;=&#32;fldp-&gt;m&#32;&amp;&amp;&#32;y&#32;&gt;&#32;0&#32;&amp;&amp;&#32;x&#32;&lt;=&#32;fldp-&gt;n){
28 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1ac484c31c03a19ecf6c602d2beb805267">msgtype</link>&#32;=&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a3b9930fe73fc523417baa4bb2e7986ff">LF_ADD</link>;
29 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[0]&#32;=&#32;x;
30 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[1]&#32;=&#32;y;
31 
32 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
33 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis class="stringliteral">&quot;ОШИБКА:&#32;указанная&#32;клетка&#32;находится&#32;за&#32;пределом&#32;поля.\n&quot;</emphasis>);
34 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;<link linkend="lifeop_8h_1a99fb83031ce9923c84392b4e92f956b5ae6c28a3b30ae15f70d7d1a2144713805">LF_ER_OUTOFFLD</link>;
36 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
38 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis class="stringliteral">&quot;ОШИБКА:&#32;неверное&#32;количество&#32;аргументов.\n&quot;</emphasis>);
39 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
40 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;<link linkend="lifeop_8h_1a99fb83031ce9923c84392b4e92f956b5a22a42f0e3e245de05645b09a5f58094f">LF_ER_WRNUMARG</link>;
41 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
42 &#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;<emphasis class="keywordflow">if</emphasis>(!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;clear&quot;</emphasis>)&#32;||&#32;!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;очистить&quot;</emphasis>)){
43 
44 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1ac484c31c03a19ecf6c602d2beb805267">msgtype</link>&#32;=&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a5a7c518bbf5563068423ad41f2c1c0a9">LF_CLR</link>;
45 &#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;<emphasis class="keywordflow">if</emphasis>(!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;start&quot;</emphasis>)&#32;||&#32;!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;старт&quot;</emphasis>)){
46 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;P;
47 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1ac484c31c03a19ecf6c602d2beb805267">msgtype</link>&#32;=&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a3bec17b3914ed04bcaed9a1b52fcda5e">LF_START</link>;
48 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(sscanf(cmd,&#32;<emphasis class="stringliteral">&quot;%s%d&quot;</emphasis>,&#32;oper,&#32;&amp;P)&#32;&gt;&#32;1){
49 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(P&#32;&gt;&#32;0){
50 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[0]&#32;=&#32;P;
51 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
52 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis class="stringliteral">&quot;ОШИБКА:&#32;количество&#32;поколений&#32;должно&#32;быть&#32;больше&#32;нуля.\n&quot;</emphasis>);
53 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;<link linkend="lifeop_8h_1a99fb83031ce9923c84392b4e92f956b5aefe82a392240d51fbb7f072ea8a186f6">LF_ER_BADARG</link>;
55 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
56 
57 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
58 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[0]&#32;=&#32;-1;
59 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
60 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;x&#32;=&#32;0;
61 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(strstr(cmd,&#32;<emphasis class="stringliteral">&quot;-rt&quot;</emphasis>)&#32;||&#32;strstr(cmd,&#32;<emphasis class="stringliteral">&quot;-рв&quot;</emphasis>)){
62 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;1;
63 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
64 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[1]&#32;=&#32;x;
65 &#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;<emphasis class="keywordflow">if</emphasis>(!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;stop&quot;</emphasis>)&#32;||&#32;!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;стоп&quot;</emphasis>)){
66 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1ac484c31c03a19ecf6c602d2beb805267">msgtype</link>&#32;=&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a4e2071e46b25d5073e4af7f2b215ba38">LF_STOP</link>;
67 &#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;<emphasis class="keywordflow">if</emphasis>(!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;snapshot&quot;</emphasis>)&#32;||&#32;!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;состояние&quot;</emphasis>)){
68 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1ac484c31c03a19ecf6c602d2beb805267">msgtype</link>&#32;=&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a20a14774c17b65f5eb7d0fb44488397b">LF_SNAP</link>;
69 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;x&#32;=&#32;0;
70 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(strstr(cmd,&#32;<emphasis class="stringliteral">&quot;-prcs&quot;</emphasis>)&#32;||&#32;strstr(cmd,&#32;<emphasis class="stringliteral">&quot;-прцс&quot;</emphasis>)){
71 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;1;
72 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
73 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[0]&#32;=&#32;x;
74 &#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;<emphasis class="keywordflow">if</emphasis>(!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;quit&quot;</emphasis>)&#32;||&#32;!strcmp(oper,&#32;<emphasis class="stringliteral">&quot;выход&quot;</emphasis>)){
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msg.<link linkend="structmsgb_1ac484c31c03a19ecf6c602d2beb805267">msgtype</link>&#32;=&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a1f3f62ed200f104926f943260f8d79e9">LF_QUIT</link>;
76 &#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;<link linkend="lifeop_8h_1a99fb83031ce9923c84392b4e92f956b5a613c73006741c1e8ba9abcab6fcaf1b7">LF_ER_CMD</link>;
78 &#32;&#32;&#32;&#32;}
79 &#32;&#32;&#32;&#32;<emphasis class="keyword">struct&#32;</emphasis>sembuf&#32;sem[2];
80 &#32;&#32;&#32;&#32;sem[0].sem_num&#32;=&#32;2;
81 &#32;&#32;&#32;&#32;sem[0].sem_flg&#32;=&#32;0;
82 &#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;0;
83 &#32;&#32;&#32;&#32;sem[1].sem_num&#32;=&#32;1;
84 &#32;&#32;&#32;&#32;sem[1].sem_flg&#32;=&#32;0;
85 &#32;&#32;&#32;&#32;sem[1].sem_op&#32;=&#32;1;
86 &#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;2);
87 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;fldp-&gt;<link linkend="structfld__param_1ab66ed8e0098c0a86b458672a55a9cca9">k</link>;&#32;i++){
88 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;msgsnd(msgid[i],&#32;&amp;msg,&#32;<link linkend="lifeop_8h_1adf764cbdea00d65edcd07bb9953ad2b7a7371e4160efe633ac7bbef1ce940ec83">DATA_SIZE</link>&#32;*&#32;<emphasis class="keyword">sizeof</emphasis>(<emphasis class="keywordtype">int</emphasis>),&#32;0);
89 &#32;&#32;&#32;&#32;}
90 &#32;&#32;&#32;&#32;sem[0].sem_num&#32;=&#32;1;
91 &#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;-1;
92 &#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
93 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;msg.<link linkend="structmsgb_1ac484c31c03a19ecf6c602d2beb805267">msgtype</link>;
94 }
95 
96 <emphasis class="keywordtype">void</emphasis>
<link linkend="lifeop_8h_1a3f37c599f55a2b67ff121e6c37df7630">97 </link><link linkend="lifeop_8h_1a3f37c599f55a2b67ff121e6c37df7630">clearfld</link>(<emphasis class="keywordtype">int</emphasis>&#32;**fld,&#32;<emphasis class="keyword">struct</emphasis>&#32;<link linkend="structborder">border</link>&#32;*borders,&#32;<emphasis class="keyword">struct</emphasis>&#32;<link linkend="structproc__param">proc_param</link>&#32;*proc)
98 {
99 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>;&#32;i++){
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>;&#32;j++){
101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[i][j]&#32;=&#32;0;
102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1aeeebec46746633e69355c0041c87a6ae">left_border</link>[i]&#32;=&#32;0;
104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1a52e70a5be2f727a9687e12ef48f7ff3b">right_border</link>[i]&#32;=&#32;0;
105 &#32;&#32;&#32;&#32;}
106 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>;
107 }
108 
109 <emphasis class="keywordtype">int</emphasis>&#32;<emphasis class="comment">//&#32;0,&#32;3&#32;-&#32;мёртв,&#32;1,&#32;2&#32;-&#32;жив</emphasis>
<link linkend="lifeop_8h_1a67be292e3bb47697a2ce1391363c5298">110 </link><link linkend="lifeop_8h_1a67be292e3bb47697a2ce1391363c5298">start</link>(
111 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;P,
112 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;mode,
113 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;**fld,
114 &#32;&#32;&#32;&#32;<emphasis class="keyword">struct</emphasis>&#32;<link linkend="structborder">border</link>&#32;*borders,
115 &#32;&#32;&#32;&#32;<emphasis class="keyword">struct</emphasis>&#32;<link linkend="structfld__param">fld_param</link>&#32;*fldp,
116 &#32;&#32;&#32;&#32;<emphasis class="keyword">struct</emphasis>&#32;<link linkend="structproc__param">proc_param</link>&#32;*proc,
117 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;semid,
118 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;num,
119 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;*msgid)
120 {
121 &#32;&#32;&#32;&#32;<emphasis class="keyword">struct&#32;</emphasis>sembuf&#32;sem[2];
122 &#32;&#32;&#32;&#32;sem[0].sem_flg&#32;=&#32;0;
123 &#32;&#32;&#32;&#32;sem[1].sem_flg&#32;=&#32;0;
124 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;iter&#32;=&#32;abs(P);
125 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">while</emphasis>(iter){
126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_num&#32;=&#32;0;
127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[1].sem_num&#32;=&#32;0;
128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>;&#32;i++){
129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[i][0]&#32;=&#32;borders-&gt;<link linkend="structborder_1ad9180674bd187d2d03c1df75cfe09b5c">left_neighbor</link>[i]&#32;+&#32;2;
130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[i][proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>&#32;-&#32;1]&#32;=&#32;borders-&gt;<link linkend="structborder_1aba1475f2a488b21361600147af4a88d6">right_neighbor</link>[i]&#32;+&#32;2;
131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>;&#32;j++){
133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(fld[0][j]&#32;!=&#32;3){
134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[0][j]&#32;=&#32;borders-&gt;<link linkend="structborder_1a517e3084650ac9f1b2082b166e0396e3">up_neighbor</link>[j];
135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[0][j]&#32;=&#32;1;
137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(fld[proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>&#32;-&#32;1][j]&#32;!=&#32;3){
139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>&#32;-&#32;1][j]&#32;=&#32;borders-&gt;<link linkend="structborder_1af38f8c295590a5b07d90ccf4b246692b">down_neighbor</link>[j];
140 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
141 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>&#32;-&#32;1][j]&#32;=&#32;1;
142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
144 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>;&#32;i++){
145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[i][0]&#32;%=&#32;2;
146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[i][proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>&#32;-&#32;1]&#32;%=&#32;2;
147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>&#32;-&#32;1;&#32;i++){
149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>&#32;-&#32;1;&#32;j++){
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;count_alive&#32;=&#32;0;
151 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;t&#32;=&#32;-1;&#32;t&#32;&lt;=&#32;1;&#32;t++){
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;f&#32;=&#32;-1;&#32;f&#32;&lt;=&#32;1;&#32;f++){
153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>((t&#32;!=&#32;0&#32;||&#32;f&#32;!=&#32;0)&#32;&amp;&amp;&#32;fld[i&#32;+&#32;t][j&#32;+&#32;f]&#32;%&#32;2){
154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count_alive++;
155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(fld[i][j]&#32;&amp;&amp;&#32;(count_alive&#32;&gt;&#32;<link linkend="lifeop_8h_1adc29c2ff13d900c2f185ee95427fb06cab24dddf9a6fcf446b9ee4a133200e33f">LF_MAXNEED</link>&#32;||&#32;count_alive&#32;&lt;&#32;<link linkend="lifeop_8h_1adc29c2ff13d900c2f185ee95427fb06caca139b3fe330ee1a5b9ed109ed03da14">LF_MINNEED</link>)){
159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[i][j]&#32;+=&#32;2;
160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;<emphasis class="keywordflow">if</emphasis>(!fld[i][j]&#32;&amp;&amp;&#32;count_alive&#32;==&#32;<link linkend="lifeop_8h_1adc29c2ff13d900c2f185ee95427fb06ca71b33e5439241c704d17f6928a0fd7c4">LF_BORN</link>){
161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[i][j]&#32;+=&#32;2;
162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>&#32;-&#32;1;&#32;i++){
166 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>&#32;-&#32;1;&#32;j++){
167 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(fld[i][j]&#32;==&#32;3){
168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[i][j]&#32;=&#32;0;
169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(fld[i][j]&#32;==&#32;2){
171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[i][j]&#32;=&#32;1;
172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;1;
176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;==&#32;0){
178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;-fldp-&gt;<link linkend="structfld__param_1ab66ed8e0098c0a86b458672a55a9cca9">k</link>;
179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;0;
182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>&#32;-&#32;1;&#32;i++){
185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1aeeebec46746633e69355c0041c87a6ae">left_border</link>[i]&#32;=&#32;fld[i][1];
186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1a52e70a5be2f727a9687e12ef48f7ff3b">right_border</link>[i]&#32;=&#32;fld[i][proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>&#32;-&#32;2];
187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;j&#32;=&#32;1;&#32;j&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>&#32;-&#32;1;&#32;j++){
189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1aa03d07abcb95934a80f3a5216a437e05">up_border</link>[j]&#32;=&#32;fld[1][j];
190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1a91c057e02d53238e157ee6e67f694177">down_border</link>[j]&#32;=&#32;fld[proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>&#32;-&#32;2][j];
191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(P&#32;&gt;&#32;0){
193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iter--;
194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_num&#32;=&#32;5;
196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;1;
197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;==&#32;0){
199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;-fldp-&gt;<link linkend="structfld__param_1ab66ed8e0098c0a86b458672a55a9cca9">k</link>;
200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;0;
203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(mode){
206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;usleep(100000);
207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;system(<emphasis class="stringliteral">&quot;clear&quot;</emphasis>);
208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="lifeop_8h_1a5a4fae3e7116c3fc2eed053fbd3e7d70">snap</link>(fld,&#32;0,&#32;fldp,&#32;proc,&#32;semid,&#32;num);
209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_num&#32;=&#32;2;
211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;1;
212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[1].sem_num&#32;=&#32;1;
213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[1].sem_op&#32;=&#32;0;
214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;2);
215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keyword">struct&#32;</emphasis><link linkend="structmsgb">msgb</link>&#32;msg;
216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(msgrcv(msgid[num],&#32;&amp;msg,&#32;<link linkend="lifeop_8h_1adf764cbdea00d65edcd07bb9953ad2b7a7371e4160efe633ac7bbef1ce940ec83">DATA_SIZE</link>&#32;*&#32;<emphasis class="keyword">sizeof</emphasis>(<emphasis class="keywordtype">int</emphasis>),&#32;0,&#32;IPC_NOWAIT)&#32;==&#32;-1){
217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_num&#32;=&#32;2;
218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;1;
219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;==&#32;0){
221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;-2&#32;*&#32;fldp-&gt;<link linkend="structfld__param_1ab66ed8e0098c0a86b458672a55a9cca9">k</link>;
222 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">continue</emphasis>;
225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_num&#32;=&#32;2;
227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;1;
228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;==&#32;0){
230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;-2&#32;*&#32;fldp-&gt;<link linkend="structfld__param_1ab66ed8e0098c0a86b458672a55a9cca9">k</link>;
231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;x,&#32;y;
234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;ok&#32;=&#32;0;
235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">switch</emphasis>(msg.<link linkend="structmsgb_1ac484c31c03a19ecf6c602d2beb805267">msgtype</link>){
236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a3b9930fe73fc523417baa4bb2e7986ff">LF_ADD</link>:
237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[0];
238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[1];
239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(<link linkend="lifefld_8h_1a33d22361defb8f49f54304fe19240abe">checkhit</link>(&amp;x,&#32;&amp;y,&#32;fldp,&#32;proc)){
240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fld[x][y]&#32;=&#32;1;
241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ok&#32;=&#32;1;
242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(y&#32;==&#32;1){
243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1aeeebec46746633e69355c0041c87a6ae">left_border</link>[x]&#32;=&#32;1;
244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(y&#32;==&#32;proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>&#32;-&#32;2){
246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1a52e70a5be2f727a9687e12ef48f7ff3b">right_border</link>[x]&#32;=&#32;1;
247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(x&#32;==&#32;1){
249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1aa03d07abcb95934a80f3a5216a437e05">up_border</link>[y]&#32;=&#32;1;
250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
251 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(x&#32;==&#32;proc-&gt;<link linkend="structproc__param_1aa451c5f2cadd3053a3fb92db509345d2">vert_side</link>&#32;-&#32;2){
252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;borders-&gt;<link linkend="structborder_1a91c057e02d53238e157ee6e67f694177">down_border</link>[y]&#32;=&#32;1;
253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a5a7c518bbf5563068423ad41f2c1c0a9">LF_CLR</link>:
257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="lifeop_8h_1a3f37c599f55a2b67ff121e6c37df7630">clearfld</link>(fld,&#32;borders,&#32;proc);
258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
259 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a3bec17b3914ed04bcaed9a1b52fcda5e">LF_START</link>:
260 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;==&#32;0){
261 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis class="stringliteral">&quot;ОШИБКА:&#32;Игра&#32;уже&#32;запущена.\n&quot;</emphasis>);
262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ok&#32;=&#32;0;
265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a4e2071e46b25d5073e4af7f2b215ba38">LF_STOP</link>:
267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;iter&#32;=&#32;0;
268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;==&#32;0){
269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis class="stringliteral">&quot;Выполнено.\n&quot;</emphasis>);
270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a20a14774c17b65f5eb7d0fb44488397b">LF_SNAP</link>:
274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="lifeop_8h_1a5a4fae3e7116c3fc2eed053fbd3e7d70">snap</link>(fld,&#32;msg.<link linkend="structmsgb_1adcb32367e9da1068f2e7a266f9c16f20">data</link>[0],&#32;fldp,&#32;proc,&#32;semid,&#32;num);
275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">case</emphasis>&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a1f3f62ed200f104926f943260f8d79e9">LF_QUIT</link>:
277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;==&#32;0){
278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis class="stringliteral">&quot;Выполнено.\n&quot;</emphasis>);
279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;<link linkend="lifeop_8h_1abc6126af1d45847bc59afa0aa3216b04a1f3f62ed200f104926f943260f8d79e9">LF_QUIT</link>;
282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">default</emphasis>:
284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">break</emphasis>;
285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(ok){
287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis class="stringliteral">&quot;Выполнено.\n&quot;</emphasis>);
288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
290 &#32;&#32;&#32;&#32;}
291 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>&#32;0;
292 }
293 
294 <emphasis class="keywordtype">void</emphasis>
<link linkend="lifeop_8h_1a5a4fae3e7116c3fc2eed053fbd3e7d70">295 </link><link linkend="lifeop_8h_1a5a4fae3e7116c3fc2eed053fbd3e7d70">snap</link>(<emphasis class="keywordtype">int</emphasis>&#32;**fld,&#32;<emphasis class="keywordtype">int</emphasis>&#32;mode,&#32;<emphasis class="keyword">struct</emphasis>&#32;<link linkend="structfld__param">fld_param</link>&#32;*fldp,&#32;<emphasis class="keyword">struct</emphasis>&#32;<link linkend="structproc__param">proc_param</link>&#32;*proc,&#32;<emphasis class="keywordtype">int</emphasis>&#32;semid,&#32;<emphasis class="keywordtype">int</emphasis>&#32;num)
296 {
297 &#32;&#32;&#32;&#32;key_t&#32;key&#32;=&#32;ftok(<emphasis class="stringliteral">&quot;life-server&quot;</emphasis>,&#32;<emphasis class="charliteral">&apos;r&apos;</emphasis>);
298 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;shmprint&#32;=&#32;shmget(key,&#32;(fldp-&gt;<link linkend="structfld__param_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>&#32;+&#32;1)&#32;*&#32;<emphasis class="keyword">sizeof</emphasis>(<emphasis class="keywordtype">char</emphasis>),&#32;<link linkend="lifeop_8h_1adf764cbdea00d65edcd07bb9953ad2b7afa588afcf6a1d45e5503f8fb1f189df2">RIGHTS</link>&#32;|&#32;IPC_CREAT);
299 &#32;&#32;&#32;&#32;<emphasis class="keywordtype">char</emphasis>&#32;*shm&#32;=&#32;shmat(shmprint,&#32;NULL,&#32;0);
300 &#32;&#32;&#32;&#32;<emphasis class="keyword">struct&#32;</emphasis>sembuf&#32;sem[2];
301 &#32;&#32;&#32;&#32;sem[0].sem_num&#32;=&#32;3;
302 &#32;&#32;&#32;&#32;sem[0].sem_flg&#32;=&#32;0;
303 &#32;&#32;&#32;&#32;sem[1].sem_num&#32;=&#32;4;
304 &#32;&#32;&#32;&#32;sem[1].sem_flg&#32;=&#32;0;
305 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;==&#32;0){
306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shm[fldp-&gt;<link linkend="structfld__param_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>]&#32;=&#32;<emphasis class="charliteral">&apos;\0&apos;</emphasis>;
307 &#32;&#32;&#32;&#32;}
308 &#32;&#32;&#32;&#32;shm&#32;+=&#32;proc-&gt;<link linkend="structproc__param_1ab98bd982bcef064d742eaad7405b75fa">num_gor</link>&#32;*&#32;fldp-&gt;<link linkend="structfld__param_1a325bd3268e1877cda2a01cc850b02409">sqrside</link>;
309 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;curline&#32;=&#32;1;&#32;curline&#32;&lt;=&#32;fldp-&gt;<link linkend="structfld__param_1a742204794ea328ba293fe59cec79b990">m</link>;&#32;curline++){
310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[1].sem_op&#32;=&#32;0;
311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;&amp;sem[1],&#32;1);
312 
313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordtype">int</emphasis>&#32;x&#32;=&#32;curline;
314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(<link linkend="lifefld_8h_1a33d22361defb8f49f54304fe19240abe">checkhit</link>(&amp;x,&#32;NULL,&#32;fldp,&#32;proc)){
315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;1;&#32;i&#32;&lt;&#32;proc-&gt;<link linkend="structproc__param_1aa38bc3a4369ecb19504a1bbeb65c0fd7">gor_side</link>&#32;-&#32;1;&#32;i++){
316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(!mode){
317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(fld[x][i]){
318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shm[i&#32;-&#32;1]&#32;=&#32;<emphasis class="charliteral">&apos;*&apos;</emphasis>;
319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shm[i&#32;-&#32;1]&#32;=&#32;<emphasis class="charliteral">&apos;.&apos;</emphasis>;
321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;shm[i&#32;-&#32;1]&#32;=&#32;num;
324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
327 
328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;1;
329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;==&#32;0){
331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;-fldp-&gt;<link linkend="structfld__param_1ab66ed8e0098c0a86b458672a55a9cca9">k</link>;
332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(!mode){
334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;puts(shm);
335 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;<emphasis class="keywordflow">else</emphasis>&#32;{
336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">for</emphasis>(<emphasis class="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;fldp-&gt;<link linkend="structfld__param_1a76f11d9a0a47b94f72c2d0e77fb32240">n</link>;&#32;i++){
337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis class="stringliteral">&quot;%2d&#32;&quot;</emphasis>,&#32;shm[i]);
338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis class="stringliteral">&quot;\n&quot;</emphasis>);
340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
341 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fflush(stdout);
343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[1].sem_op&#32;=&#32;-fldp-&gt;<link linkend="structfld__param_1ab66ed8e0098c0a86b458672a55a9cca9">k</link>&#32;+&#32;1;
344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;&amp;sem[1],&#32;1);
345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis class="keywordflow">if</emphasis>(num&#32;!=&#32;0){
347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[0].sem_op&#32;=&#32;0;
348 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;1);
349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;sem[1].sem_op&#32;=&#32;1;
350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;semop(semid,&#32;sem,&#32;2);
351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
352 &#32;&#32;&#32;&#32;}
353 &#32;&#32;&#32;&#32;shmdt(shm&#32;-&#32;proc-&gt;<link linkend="structproc__param_1ab98bd982bcef064d742eaad7405b75fa">num_gor</link>&#32;*&#32;fldp-&gt;<link linkend="structfld__param_1a325bd3268e1877cda2a01cc850b02409">sqrside</link>);
354 &#32;&#32;&#32;&#32;shmctl(shmprint,&#32;IPC_RMID,&#32;NULL);
355 &#32;&#32;&#32;&#32;<emphasis class="keywordflow">return</emphasis>;
356 }
357 
    </computeroutput></literallayout>
</section>
